#pragma checksum "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\TestConstructor\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1580504703a2eb7f2c8c5588401f127e3143e54b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_TestConstructor_Create), @"mvc.1.0.view", @"/Views/TestConstructor/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\_ViewImports.cshtml"
using networkApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\_ViewImports.cshtml"
using networkApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\_ViewImports.cshtml"
using networkApp.ViewModels.TestConstructor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\_ViewImports.cshtml"
using networkApp.ViewModels.TestResult;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1580504703a2eb7f2c8c5588401f127e3143e54b", @"/Views/TestConstructor/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7316a8470aab35e9f06cffd6510345aa656d9ce", @"/Views/_ViewImports.cshtml")]
    public class Views_TestConstructor_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("button btn btn-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("sbtn"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("visibility:hidden"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("submit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "GetTest", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\TestConstructor\Create.cshtml"
  
    ViewData["Title"] = "Создание теста";

#line default
#line hidden
#nullable disable
            WriteLiteral(" \r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1580504703a2eb7f2c8c5588401f127e3143e54b6043", async() => {
                WriteLiteral("\r\n    <div class=\"test__info-container mt-16\" id=\"test__info-container\">\r\n        <h2 class=\"header__title\">Добавление теста</h2>\r\n        <div class=\"text__block\">\r\n            <input class=\"text-input text-input--all test-name__imput\"");
                BeginWriteAttribute("value", " value=\"", 332, "\"", 357, 1);
#nullable restore
#line 10 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\TestConstructor\Create.cshtml"
WriteAttributeValue("", 340, ViewBag.FileName, 340, 17, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"" id=""testname"" name=""testName"" placeholder=""Введите название теста"" />
            <span class=""focus-border focus-name-border""></span>
        </div>
        <div class=""text__block"">
            <input class=""text-input text-input--all test-specialization__imput""");
                BeginWriteAttribute("value", " value=\"", 639, "\"", 674, 1);
#nullable restore
#line 14 "E:\gensec\Documents\GitHub\networkApp\networkApp\Views\TestConstructor\Create.cshtml"
WriteAttributeValue("", 647, ViewBag.FileSpecialization, 647, 27, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"" id=""testSpecialization"" name=""testSpecialization"" placeholder=""Введите cпециализацию теста"" />
            <span class=""focus-border focus-specialization-border""></span>
        </div>
    </div>

    <div>
        <div id=""baseContainer"" class=""baseContainer mt-32"">
            <button class=""button button--add button--add-question"" id=""test-add-question"" onclick=""createQuestion()"">Добавить вопрос</button>
        </div>
    </div>

    <div class=""test-submit-container"" id=""test-submit-container"">
        <div id=""listErrors"" class=""listErrors""></div>
        <button class=""button btn btn-primary"" onclick=""apply()"">Выполнить изменения</button>
        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1580504703a2eb7f2c8c5588401f127e3143e54b8345", async() => {
                    WriteLiteral("Сохранить изменения");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    </div>

    <script>
        let deletableQ = [];
        let listError = [];
        let deletable = new Array();
        let numQuestion = 0;
        let numAnswer = 0;

        function createQuestion() {
            document.getElementById(""sbtn"").style.visibility = ""hidden"";
            document.getElementById(""test__info-container"").style.marginBottom = ""-32px"";
            document.getElementById(""baseContainer"").style.marginBottom = ""128px"";
            document.getElementById(""test-add-question"").style.bottom = ""-96px"";
            document.getElementById(""test-submit-container"").style.display = ""block"";
            numQuestion++;
            let str = '\<div class=""test-constructor__question"" id=""q' + numQuestion + '"">\
                            <div  class=""test-constructor__question-container"">\
                                <input class=""text-input text-input--all mr-8"" type = ""text"" name = ""nameQuestion"" id = ""qnm"" placeholder = ""Введите вопрос"" />\
                 ");
                WriteLiteral(@"               <select onchange=""chngType('+ numQuestion + ')"" name=""type"" id=""type' + numQuestion + '"">\
                                    <option value=""radio"">Один из списка</option>\
                                    <option value=""checkbox"">Несколько из списка</option>\
                                </select>\
                                <button class=""button button--delete"" onclick=""deleteQuestion('+ numQuestion + ')"">Удалить</button>\
                            </div>\
                            <button class=""button button--add button--add-answer"" onclick = ""createAnswer('+ numQuestion + ')"" > Добавить ответ</button >\
                        </div > ';
            let childComp = document.getElementById(""baseContainer"");
            let div = document.createElement('div');
            div.innerHTML = str;
            childComp.appendChild(div).setAttribute(""class"", `test-constructor__question-block mt-72`);
            childComp.appendChild(div).setAttribute(""id"", `q${numQuest");
                WriteLiteral(@"ion}`);
            event.preventDefault();
        }

        function createAnswer(num) {
            document.getElementById(""sbtn"").style.visibility = ""hidden"";
            numAnswer++;
            console.log()
            let str = '\<div class=""test-constructor__answer-container"" id=""ans' + numAnswer + '"" num=""' + numAnswer + '"">\
                            <input id = ""ka' + numAnswer + '"" class=""test__check"" value = ""' + numAnswer + '"" type = ""' + getType(num) + '"" name = ""isTrue[' + num + ']"" />\
                            <input class=""text-input text-input--all"" id=""ia' + numAnswer + '"" type=""text"" placeholder=""Введите ответ"" name=""answer[' + num + ']"" />\
                            <button class=""button button--delete"" onclick=""deleteAnswer('+ numAnswer + ')"">Удалить</button>\
                        </div > ';
            let childComp = document.getElementById(""q"" + num);
            let div = document.createElement('div');
            div.innerHTML = str;
            childCo");
                WriteLiteral(@"mp.appendChild(div).setAttribute(""id"", `ans${numAnswer}`);
            event.preventDefault();
        }

        function getType(num) {
            let e = document.getElementById(""type"" + num);
            return e.options[e.selectedIndex].value;
        }

        function deleteAnswer(num) {
            document.getElementById(""sbtn"").style.visibility = ""hidden"";
            document.getElementById(""ans"" + num).remove();
            deletable.push(num);
            event.preventDefault();
        }

        function deleteQuestion(num) {
            deletableQ.push(num);
            document.getElementById(""sbtn"").style.visibility = ""hidden"";
            let quest = document.getElementById(""q"" + num).children;

            for (var i = 1; i < quest.length; i++) {
                let strAtr = quest.item(i).getAttribute(""id"");
                deletable.push(Number(strAtr.replace(""ans"", '')));
            }
            document.getElementById(""q"" + num).remove();
            event.");
                WriteLiteral(@"preventDefault();
        }

        function validate() {
            var textName = document.getElementById(""testname"").value;
            if (textName == '') {
                listError.push(""Введите название теста"");
            }

            var testSpecialization = document.getElementById(""testSpecialization"").value;
            if (testSpecialization == '') {
                listError.push(""Введите специализацию теста"");
            }

            let counterContainer = document.getElementById(""baseContainer"").children.length;

            if (counterContainer == 1) {
                listError.push(""Добавьте ответ"");
            }
            for (var i = 1; i < counterContainer; i++) {
                if (deletableQ.indexOf(i) >= 0) {
                    continue;
                }
                else {
                    let question = document.getElementById(""q"" + i).children;
                    let questName = question.item(0).children.item(0).value

                 ");
                WriteLiteral(@"   let counterAnswers = question.length;

                    if (questName == '') {
                        listError.push(""Введите текст вопроса в вопросе № "" + i);
                    }
                    if (counterAnswers == 1) {
                        listError.push(""Добавьте ответ в вопрос № "" + i);
                    }
                    let counterBox = 0;
                    for (var j = 1; j < counterAnswers; j++) {
                        let box = question.item(j).children.item(0).children.item(0).checked;
                        let ansI = question.item(j).children.item(0).children.item(1).value;
                        if (box === false) {
                            counterBox++;
                        }

                        if (ansI.length == 0) {
                            listError.push(""Введите текст ответа вопроса № "" + i + "" вопрос: "" + j);
                        }
                    }
                    if (counterBox == counterAnswers - 1 && counterAnsw");
                WriteLiteral(@"ers > 1) {
                        listError.push(""Выберите хотя бы один правильный ответ в вопросе "" + questName);
                    }
                }
            }

            let counterChild = document.getElementById(""listErrors"").children.length;
            if (counterChild > 0) {
                for (var i = 0; i < counterChild; i++) {
                    let el = document.getElementById(""error"");
                    document.getElementById(""error"").remove();
                }
            }

            event.preventDefault();
        }

        function apply() {
            validate();
            for (var i = 1; i <= numAnswer; i++) {
                if (deletable.indexOf(i) >= 0) {
                    continue;
                }
                else {
                    document.getElementById(""ka"" + i).value = document.getElementById(""ia"" + i).value;
                }
            }
            if (listError.length == 0) {
                document.getElementById(""s");
                WriteLiteral(@"btn"").style.visibility = ""visible"";
            }
            else {
                let errors = '';
                for (var i = 0; i < listError.length; i++) {
                    let childComp = document.getElementById(""listErrors"");
                    let div = document.createElement('div');
                    div.innerHTML = '<div>' + listError[i] + '</div>';
                    childComp.appendChild(div).setAttribute(""id"", ""error"");
                }
                listError = [];
            }
            event.preventDefault();
        }

        function chngType(num) {
            let children = document.getElementById(""q"" + num).children;
            console.log(children);
            let len = children.length;
            for (var i = 1; i < len; i++) {
                let type = children.item(i).children.item(0).children.item(0).type = getType(num);
            }
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
